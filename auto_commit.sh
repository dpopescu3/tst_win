#!/usr/bin/env bash
set -euo pipefail

REPO_ROOT="${1:-$(pwd)}"
TARGET_NAME="${2:-}"
DESTDIR="${3:-$REPO_ROOT}"

cd "$REPO_ROOT"

if ! command -v git >/dev/null 2>&1; then
  echo "Error: git not found on PATH." >&2
  exit 1
fi

if [[ ! -d .git ]]; then
  echo "No git repo found. Initializing one..."
  git init
  git config user.name "Student Name"
  git config user.email "student@example.com"
  if [[ ! -f .gitignore ]]; then
    printf 'output/\n' > .gitignore
    git add .gitignore
    git commit -m "Initial commit (autogenerated)"
  fi
fi

head_exists() {
  git rev-parse --verify HEAD >/dev/null 2>&1
}

files_unchanged() {
  git diff --quiet HEAD -- perfect.cpp soundex.cpp
}

if head_exists && files_unchanged; then
  echo "cpps unchanged, skipping app launch + commit."
  exit 0
fi

COUNTER_FILE=".autocommit_counter.txt"
if [[ -f "$COUNTER_FILE" ]]; then
  if [[ "$(cat "$COUNTER_FILE")" =~ ^[0-9]+$ ]]; then
    COUNT="$(cat "$COUNTER_FILE")"
  else
    COUNT=0
  fi
else
  COUNT=0
fi
COUNT=$((COUNT + 1))
echo "$COUNT" > "$COUNTER_FILE"

OUTPUT_DIR="$REPO_ROOT/output"
mkdir -p "$OUTPUT_DIR"
OUTPUT_FILE="$OUTPUT_DIR/welcome_output_${COUNT}.txt"

UNAME="$(uname -s || echo unknown)"
if [[ "$UNAME" == "Darwin" ]]; then
  EXE="$DESTDIR/$TARGET_NAME.app/Contents/MacOS/$TARGET_NAME"
else
  EXE="$DESTDIR/$TARGET_NAME"
fi

if [[ ! -x "$EXE" ]]; then
  if [[ "$UNAME" == "Darwin" ]]; then
    APP="$(ls -dt "$DESTDIR"/*.app 2>/dev/null | head -n1 || true)"
    if [[ -n "$APP" && -x "$APP/Contents/MacOS/$TARGET_NAME" ]]; then
      EXE="$APP/Contents/MacOS/$TARGET_NAME"
    fi
  fi
fi

if [[ ! -x "$EXE" ]]; then
  echo "Executable not found or not executable: $EXE" >&2
  exit 1
fi

export SCREENSHOT_MODE=1
if command -v script >/dev/null 2>&1; then
  if [[ "$UNAME" == "Darwin" ]]; then
    script -q "$OUTPUT_FILE" bash -lc "\"$EXE\""
  else
    script -q -c "\"$EXE\"" "$OUTPUT_FILE"
  fi
else
  "\"$EXE\"" >"$OUTPUT_FILE" 2>&1 || true
fi

if [[ ! -f "$OUTPUT_FILE" ]]; then
  echo "App output not captured. Aborting commit." >&2
  exit 1
fi

TIMESTAMP="$(date '+%Y-%m-%d %H:%M:%S')"
COMMIT_SOURCE="$(basename "$REPO_ROOT")"

git add . "$OUTPUT_FILE" "$COUNTER_FILE" "auto_commit.sh"
if git commit -m "Auto-commit #$COUNT from $COMMIT_SOURCE at $TIMESTAMP"; then
  :
else
  echo "Nothing to commit."
  exit 0
fi

git push -u origin HEAD || true
